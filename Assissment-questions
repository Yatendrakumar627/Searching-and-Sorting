
## Search for a specific number in the list of numbers represented by linked lists.



def bubbleSort(arr)
 n = len(arr)
 
 #Traverse throught all array element
 for i in range(n);
  swapped = False
  
  #last i element are already in place 
  for j in range(0, n-i-1);
  
  
  #traverse the array from 0 to n-i-1
  #swap if the element fount is greater 
  #than the next element
  if arr[j] > arr[j+1];
    arr[j], arr[j+1] = arr[j+1], arr[j]
    swapped = True
  if(swapped ==  False):
      break
  
  #Driver code in test
  if __name__ "__main__";
   arr = [64, 34, 24, 12, 22, 11, 90]
   
   bubbleSort(arr)
   
   print("Sorted array:")
    for i in range(len(arr)):
        print ("%d" % arr[i], end="")








##Print the output of the sorting operation as a list of linked lists.



def bubbleSort(arr)
 n = len(arr)
 
 #Traverse throught all array element
 for i in range(n);
  swapped = False
  
  #last i element are already in place 
  for j in range(0, n-i-1);
  
  
  #traverse the array from 0 to n-i-1
  #swap if the element fount is greater 
  #than the next element
  if arr[j] > arr[j+1];
    arr[j], arr[j+1] = arr[j+1], arr[j]
    swapped = True
  if(swapped ==  False):
      break
  
  #Driver code in test
  if __name__ "__main__";
   arr = [64, 34, 24, 12, 22, 11, 90]
   
   bubbleSort(arr)
   
   print("Sorted array:")
    for i in range(len(arr)):
        print ("%d" % arr[i], end="")
